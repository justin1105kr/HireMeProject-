############################################################
# 참고 | try 안에서 만든 변수는 try 바깥에서 사용할 수 있나요?        ##
# try는 함수가 아니므로 스택 프레임을 만들지 않습니다                 ##
# 따라서 try 안에서 변수를 만들더라도 try 바깥에서 사용할 수 있습니다.  ##
# 물론 except, else, finally에서도 사용할 수 있습니다.          ##
##########################################################

##############################
# 38.1 try except로 사용하기  ##
####################################################
# try:
#     실행할 코드
# except:
#     예외가 발생했을 때 처리하는 코드
####################################################


try:
    x = int(input('나눌 숫자를 입력하세요: '))
    y = 10 / x
    print(y)
except:    # 예외가 발생했을 때 실행됨, ex) x=0
    print('예외가 발생했습니다.')


############################
# 38.1.1  특정 예외 처리하기  ##
###################################################
# try:
#     실행할 코드
# except 예외이름 :
#     예외가 발생했을 때 처리하는 코드
####################################################

y = [10, 20, 30]

try:
    index, x = map(int, input('인덱스와 나눌 숫자를 입력하세요: ').split())
    print(y[index] / x)
except ZeroDivisionError:  # 숫자를 0으로 나눠서 에러가 발생했을 때 실행됨
    print('숫자를 0으로 나눌 수 없습니다.')
except IndexError:  # 범위를 벗어난 인덱스에 접근하여 에러가 발생했을 때 실행됨
    print('잘못된 인덱스입니다.')


####################################
# 38.1.2  예외의 에러 메시지 받아오기   ##
####################################################
# except에서 as 뒤에 변수를 지정하면 발생한 예외의 에러 메시지를 받아올 수 있습니다
#
####################################################
y = [10, 20, 30]

try:
    index, x = map(int, input('인덱스와 나눌 숫자를 입력하세요: ').split())
    print(y[index] / x)
except ZeroDivisionError as e:  # as 뒤에 변수를 지정하면 에러를 받아옴
    print('숫자를 0으로 나눌 수 없습니다.', e)  # e에 저장된 에러 메시지 출력
except IndexError as e:
    print('잘못된 인덱스입니다.', e)


############################
# 참고 | 모든 에러 메세지 출력  ##
####################################################
# 모든 예외의 에러 메시지를 출력하고 싶다면
# 다음과 같이 except에 Exception을 지정하고 사용
####################################################
except Exception as e:    # 모든 예외의 에러 메시지를 출력할 때는 Exception을 사용
    print('예외가 발생했습니다.', e)


########################
# 참고 | 예외 계층       ##
####################################################
# 예외도 클래스 상속으로 구현되며 다음과 같은 계층으로 이루어져 있습니다.
# 보통 파이썬에서 새로운 예외를 만들 때는 Exception을 상속받아서 구현합니다.
# 전체 계층도는 파이썬 공식 문서를 참조하세요.
# Built-in Exceptions: https://docs.python.org/3/library/exceptions.html#exception-hierarchy