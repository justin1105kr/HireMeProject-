
# 22.1 리스트 매소드  #

#############################
# << 리스트에 요소 추가하기 >>  ##
###########################
# append: 요소 하나를 추가
# extend: 리스트의 끝에 리스트 연결하여 확장
# insert: 특정 인덱스에 요소 추가

#####
# 1) insert :기 리스트의 특정 인덱스 요소 하나 추가하기
# insert(인덱스, 요소 )
# - insert(0, 요소) : 리스트의 맨 처음에 요소 추가
# - insert(len(리스트), 요소) : 리스트의 끝에 요소 추가

#####
# 2) append : 리스트의 끝에 원소 추가하기
# - 리스트.append(원소)

#####
# 3) extend : 리스트 확장하기
# - 리스트.extend(리스트)
# - extend의 동작
#   --> extend에 전달된 리스트 소를 반복하면서 요
#       각 요소를 리스트 a에 추가하는 것입니다.
# >>> a = [10, 20, 30]
# >>> a.extend([500, 600])
# >>> a
# [10, 20, 30, 500, 600]

#####
# 4) 슬라이스 이용하여 리스트 추가
# 슬라이스를 이용하여 리스트 범위 밖의 인덱스 사용가능
# a[len(a):] = [500]
# a.extend([500]) 과 같음



#############################
# << 리스트에 요소 삭제하기 >>  ##
###########################
# pop: 마지막 요소 또는 특정 인덱스의 요소를 삭제, 반환
# remove: 특정 값을 찾아서 삭제

#####
# 1) pop, del : 인덱스로 원소 삭제
# pop() : 마지막 요소 삭제 후, 요소 반환
# pop(인덱스) : 인덱스 요소 삭제, 반환
# del 리스트[인덱스], 반환값 없음
# cf) 딕셔너리 pop('키', 기본값)
# >>> a = [10, 20, 30]
# >>> a.pop(1) # 10 반환
# >>> del a[1] # 10 삭제
# >>> pop()  # 30

#####
# 2) remove : 특정값으로 리스트 원소 삭제
# - 리스트.remove(원소)
# - 원소값이 여러 개인 경우, 처음 찾은 값 삭제
#
# 3) clear() 리스트의 모든 요소 삭제


################################
# << 리스트 인덱스, 원소 갯수  >>  ##
##############################
# 1) index(요소) : 리스트에서 특정 값의 인덱스 구하기
# - 요소 없을 경우 에러 발생
# - 있을 경우 가장 앞의 인덱스 반환

#####
# 2) count(요소) : 특정 값 갯수 구하기
# 리스트.count(요소)


###########################
# << 리스트 정렬 메소드 >>  ##
#########################
# 1) reverse() : 리스트의 순서를 뒤집기
# 리스트.reverse()

#####
# 2) sort(), sort(reverse=False) : 리스트 오름차순 정렬
#    sort(reverse=True) : 리스트 내림차순 정렬

#####
# 3) sort() 와 sorted()
# - sort() : 리스트를 정렬하는 '메소드'
#             => 정렬된 새로운 리스트
# - sorted(리스트) : 정렬된 리스트를 반환해주는 '함수'
#             => 원래 리스트는 그대로


###########################
# min, max, sum 내장 함수  ##
##########################
# min(리스트), max(리스트), sum(리스트)
# 각 값 반환


###########################
# Enumerate 사용하기      ##
# 인덱스, 요소 같이 출력하기 ##
########################
# for 인덱스, 요소 in enumerate(리스트) :



