# #########################################################
# 30.1.2 위치 인수(positional argument)와 리스트 언패킹 사용하기 ##
# ########################################################
# 함수에 인수를 순서대로 넣는 방식을 위치 인수(positional argument).
# 인수의 위치, 갯수 정해져있음
# - 위치 인수 사용 => 리스트, 튜플 언패킹 사용 가능
# - 리스트의 요소 갯수와 매개변수의 갯수가 같아야됨
# - 애스터리스크(*)를 리스트/튜플 앞에 붙여 사용
# 함수(*리스트)
# 함수(*튜플)
###########################################################
def print_numbers(a,b,c) :
    print(a,b,c)

x = [10, 20, 30]
print_numbers(*x)
print_numbers(*[40,50,60])


#################################################
# 30.1.3 가변 인수(variable argument) 함수 만들기  ##
###########################################################
# - 함수의 매개변수 앞에 *를 붙여 사용
# - 가변 인수 함수 호출 시, 리스트/튜플 언패킹하여 호출
# def 함수(*매개변수)
###########################################################
def print_numbers(*args):
    for arg in args:
         print(arg)

print_numbers(10,20,30,40)
y = [10,20,30,40]
print_numbers(*y)


#######################################
# 참고 | 고정 인수와 가변 인수를 함께 사용하기 ##
###########################################################
# 고정 인수와 가변 인수를 함께 사용할 때는
# 고정 매개변수를 먼저 지정하고, 그 다음 매개변수에 *를 붙여주면 됩니다.
###########################################################
def print_numbers(a, *args):
    print(a)
    print(args)